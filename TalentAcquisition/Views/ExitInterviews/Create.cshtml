@model TalentAcquisition.BusinessLogic.UpdatedDomain.ExitInterview

@{
    ViewBag.Title = "Create Exit Record";
    Layout = "~/Views/Shared/_NormalLayout.cshtml";
}

<p style="font-size: 22px;">Employee Exit</p>
<ol class="breadcrumb">
    <li><a href="@Url.Action("Dashboard","Admin")">Home</a></li>
    @*<li><a href="#">Private</a></li>*@
    @*<li><a href="#">Pictures</a></li>*@
    <li class="active">Exit</li>
    <li class="active">Records</li>
    <li class="active">Create</li>
</ol>
<section class="container body-content">
    <span class="alert-danger">@ViewBag.Error</span>
    <div class="row" ng-controller="ExpenseRecordController" ng-init="init()">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <p class="">Setup Exit Record</p>
                </div>
                <div class="panel-body">
                    <div class="form-horizontal">
                        <style>
                            label {
                                font-size: 80%;
                            }
                        </style>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.No, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.No, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.No, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmployeeNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EmployeeNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EmployeeNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.OtherReasons, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.OtherReasons, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.OtherReasons, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.LeavingOn, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.LeavingOn, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.LeavingOn, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ReEmploy, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.ReEmploy)
                                            @Html.ValidationMessageFor(model => model.ReEmploy, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">

                                <div class="form-group">
                                    @Html.LabelFor(model => model.InterviewDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.InterviewDate, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.InterviewDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.InterviewerNo, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.InterviewerNo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.InterviewerNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.InterviewerName, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.InterviewerName, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.InterviewerName, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ApproveProcess, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.ApproveProcess)
                                            @Html.ValidationMessageFor(model => model.ApproveProcess, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ProcessCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        <div class="checkbox">
                                            @Html.EditorFor(model => model.ProcessCompleted)
                                            @Html.ValidationMessageFor(model => model.ProcessCompleted, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <p class="">Exit Checklist</p>
                </div>
                <div class="panel-body">
                    <div class="row container">
                        <button type="button" id="Mexico" style="float:right;margin-bottom: 10px;" class="btn btn-info btn-sm" ng-click="addGrievanceType()">Add Transaction Types</button>
                        <style>
                            #myTable input, #myTable select {
                                border: none;
                                outline: none;
                                box-shadow: none;
                                background-color: inherit;
                                padding: 0;
                                margin: 0;
                            }
                        </style>
                        <form id="empform" ng-submit="submitGrievanceTypes()">
                            <table id="mytable" class="table table-striped">
                                <thead>
                                    <tr>
                                        <th>No</th>
                                        <th>Name</th>
                                        <th>Description</th>
                                        <th>Amount</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat="type in grievanceTypes">
                                        <td>{{$index+1}}</td>
                                        <td>
                                            <input class="form-control input-sm" id="Line{{$index}}.Name" name="Line[{{$index}}].Name" ng-required="true" ng-model="type.Name" ng-disabled="!enabledEdit[{{$index}}]" />
                                        </td>
                                        <td>
                                            <input class="form-control input-sm" ng-required="true" id="Line{{$index}}.Description" name="Line[{{$index}}].Description" ng-model="type.Description" ng-disabled="!enabledEdit[{{$index}}]" />
                                        </td>
                                        <td>
                                            <input class="form-control input-sm" ng-required="true" id="Line{{$index}}.Amount" name="Line[{{$index}}].Amount" ng-model="type.Amount" ng-disabled="!enabledEdit[{{$index}}]" />
                                        </td>
                                        <td>
                                            <div class="buttons">
                                                <button class="btn btn-primary btn-xs" ng-click="edit($index)">Edit</button>
                                                <button class="btn btn-danger btn-xs" ng-click="delete($index)">Delete</button>
                                            </div>
                                        </td>
                                    </tr>

                                </tbody>

                            </table>
                            @*<input type="submit" class="btn btn-primary" value="Submit" />*@
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
</section>
<script>
    employeesbs=@Html.Raw(Json.Encode(ViewBag.Employees));
</script>