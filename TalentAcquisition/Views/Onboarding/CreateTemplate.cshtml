@model TalentAcquisition.BusinessLogic.UpdatedDomain.OnboardingTemplate

@{
    ViewBag.Title = "CreateTemplate";
    Layout = "~/Views/Shared/_NormalLayout.cshtml";
}
<p style="font-family: 'Fira Mono';font-size: 22px;">Onboarding</p>
<ol class="breadcrumb">
    <li><a href="@Url.Action("Dashboard","Admin")">Home</a></li>
    <li><a href="@Url.Action("Onboarding","Admin")">Onboarding</a></li>
    <li class="active">Template</li>
    <li class="active">Create</li>
</ol>
<section class="container body-content">
    <span>@ViewBag.Message</span>
    <div class="row">
        @*<a href="@Url.Action("requisition/create","Admin")" id="reqjob" class="btn"><img src="~/Assets/Icons/File-Plus.png" width="20" />Create Requisition</a>
            <span class="glyphicon glyphicon-search"></span> <input class="form-control input-sm" id="myInput" type="text" placeholder="filter requisition entries.." style="display:inline-block;outline:none" />*@
    </div>
    <div class="row">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <p class="">Onboarding Template</p>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm())
                {
                    <a href="" class="btn"><img src="~/Assets/Icons/File-Plus.png" width="20" /><input type="submit" value="Create Template" class="btn btn-default input-sm" /></a>
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal" style="font-size:90%">
                        <style>
                            label{
                                font-size:90%;
                            }
                            .form-group {
                                padding: 0;
                            }

                                .form-group input {
                                    padding: 0;
                                    margin-bottom: 0;
                                }
                        </style>
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-md-4" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "col-md-4" })
                                    <div class="col-md-8" style="margin-left:-4em">
                                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "2", cols = "5" })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.WelcomeMessage, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10" style="margin-top:2em">
                                @Html.TextAreaFor(model => model.WelcomeMessage, new { @class = "form-control", rows = "8", cols = "5" })
                                @Html.ValidationMessageFor(model => model.WelcomeMessage, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group hidden">
                            @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group hidden">
                            @Html.LabelFor(model => model.DateEdited, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DateEdited, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DateEdited, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
               }
            </div>
        </div>
        @*<div class="panel panel-primary">
            <div class="panel-heading">
                <p class="">Onboarding Activities</p>
            </div>
            <div class="panel-body">
                <div class="col-md-9" id="dvright"> 
                    <br/>         
                        @Html.Action("_GetAllActivitiesForTemplate", "Onboarding", new { id = Model.ID })
                </div>
                <div class="col-md-3" id="activitylist">
                    @Html.Action("_GetAllActivities","Onboarding")
                </div>
            </div>
        </div>*@
    </div>
</section>
<div class="" id="dynamicholder"></div>
@Scripts.Render("~/bundles/jqueryval")
@section Scripts{
<script type="text/javascript">
    var mainurl = "@(Url.Action("_CreateActivityViewModel","Onboarding"))";
    var templateid=@Model.ID;
    $(function () {
        $("a#addactivity").click(function () {

            var row = $(this).closest('tr');
            var id = row.find("td:eq(0)").html().trim();
            //alert(id);
            url=mainurl + "?id="+id+"&templateid="+templateid;
            //alert(url);
            @*$("#dynamicholder").load("@(Url.Action("_CreateActivityViewModel","Onboarding",new {id=1}))");*@
            //alert($("#dynamicholder").html());
            $.get(url,{},function(data,status,jqXHR) {
               // alert(data);
                $('#selectedactivities').append(data);
            });
});
    });
</script>
<script type="text/javascript">
    $(document).ready(function () {

        setEvents();

        //Function to set events for Drag-Drop
        function setEvents() {
            var lst = $('#activity');
            //Set Drag on Each 'li' in the list
                $.each(lst, function (idx, val) {
                    $('#activity').on('dragstart', function (evt) {
                        evt.originalEvent.dataTransfer.setData("Text", evt.target.textContent);
                        evt.target.draggable = false;
                    });
                });

            //Set the Drop on the <div>
                $("#dvright").on('drop', function (evt) {
                    evt.preventDefault();
                    var data = evt.originalEvent.dataTransfer.getData("Text");
                    var lst = $("#lstselectedproducts");
                    var li = "<li>"+data+"</li>";
                    li.textContent = data;
                    lst.append(li);
                });

            //The dragover
                $("#dvright").on('dragover', function (evt) {
                    evt.preventDefault();
                });
        }
    });
</script>
}