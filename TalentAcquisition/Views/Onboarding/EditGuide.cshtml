@model TalentAcquisition.BusinessLogic.UpdatedDomain.WelcomeGuide

@{
    ViewBag.Title = "Customize Guide";
    Layout = "~/Views/Shared/_NormalLayout.cshtml";
}
<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/ckeditor/adapters/jquery.js"></script>
<p style="font-family: 'Fira Mono';font-size: 22px;">Onboarding</p>
<ol class="breadcrumb">
    <li><a href="@Url.Action("Dashboard","Admin")">Home</a></li>
    <li><a href="@Url.Action("Onboarding","Admin")">Onboarding</a></li>
    <li class="active">Guide</li>
    <li class="active">Customize</li>
</ol>
<section class="container body-content">
    <span>@ViewBag.Message</span>
    <style>
        .nav-tabs li {
            min-width: 10em;
        }

            .nav-tabs li a {
                color: green;
            }
    </style>
    <div class="row">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <p class="">Guide For - <b>@Model.Name : @Model.Position</b></p>
            </div>
            <div class="panel-body">
                
                @using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.HiddenFor(model=>model.Status)
                    <input type="hidden" value="" id="newStatus" name="newStatus" />
                    <a href="javascript:void(0)" id="updateguide">
                        <img src="~/Assets/Icons/File-Plus.png" width="20" /><input type="button"  value="Update Guide" class="btn btn-default input-sm" style="outline:none;border:none" />
                    </a>

                    if (Model.Status.ToString() == "Review")
                    {
                        <a href="javascript:void(0)" id="publishguide">
                            <img src="~/Assets/Icons/File-Plus.png" width="20" /><input type="button" value="Publish Guide" class="btn btn-default input-sm" style="outline:none;border:none" />
                        </a>
                    <a href="javascript:void(0)" id="sendemail">
                        <img src="~/Assets/Icons/Envelope-Refresh.png" width="20" />  Send To Applicant
                    </a>
                    
                        <a href="/Onboarding/Preview/@Model.previewurl" id="" target="_blank">
                            <span class="pull-right"><img src="~/Assets/Icons/Presentation-.png" width="20" />  Preview</span>
                        </a>
                    }
                    else if (Model.Status.ToString() == "Submitted")
                    {
                        <a href="javascript:void(0)" id="completeguide">
                            <img src="~/Assets/Icons/File-Plus.png" width="20" /><input type="button" value="Approve Update To Employee" class="btn btn-default input-sm" style="outline:none;border:none" />
                        </a>
                    }
                    else if (Model.Status.ToString() == "Completed")
                    {
                        <a href="javascript:void(0)" id="convertapplicant">
                            <img src="~/Assets/Icons/File-Plus.png" width="20" /><input type="button" value="Convert to Employee" class="btn btn-default input-sm" style="outline:none;border:none" />
                        </a>
                    }
                    else
                    {
                        <a href="javascript:void(0)" id="closeguide">
                            <img src="~/Assets/Icons/File-Plus.png" width="20" /><input type="button" value="Archive Record" class="btn btn-default input-sm" style="outline:none;border:none" />
                        </a>
                        <a href="/Onboarding/Progress/@Model.previewurl" target="_blank">
                            <span class="pull-right"><img src="~/Assets/Icons/Presentation-.png" width="20" />  Progress</span>
                        </a>
                    }
                    <hr />
                    <style>
                         #cres li a{
                            border:none;
                            outline:none;
                            box-shadow:none;
                        }
                        #cres {
                            border:none;
                        }
                    </style>
                    <ul class="nav nav-tabs" id="cres">                       
                        <li class="active"><a data-toggle="tab" href="#home"><img src="~/Assets/Icons/Diploma.png" height="15" /> Welcome Message</a></li>
                        <li><a data-toggle="tab" href="#activities"><img src="~/Assets/Icons/Piechart.png" height="15" /> Activities</a></li>
                        <li><a data-toggle="tab" href="#extrainfo"><img src="~/Assets/Icons/Books.png" height="15"/> Resources</a></li>
                        <li><a data-toggle="tab" href="#people"><img src="~/Assets/Icons/Man-Suit-2.png" height="15" /> People</a></li>
                    </ul>
                   
                    <div class="form-horizontal" style="font-size:90%;min-height:400px">
                        @Html.HiddenFor(model=>model.previewurl)
                        <style>
                            label {
                                font-size: 90%;
                            }
                        </style>
                        <div class="tab-content">
                            <div id="home" class="tab-pane fade in active">
                                <div class="row container">
                                    <div class="form-group">
                                       <br/>
                                        <div class="col-md-12" style="margin-top:2em">
                                            @if (Model.Status.ToString() == "Review")
                                            {
                                                @Html.TextArea("WelcomeMessage", WebUtility.HtmlDecode(Model.WelcomeMessage), new { @class = "form-control ckeditor", rows = "8", cols = "5" })
                                                @*@Html.TextAreaFor(model => model.WelcomeMessage, new { @class = "form-control", rows = "10", cols = "5" })*@
                                                @Html.ValidationMessageFor(model => model.WelcomeMessage, "", new { @class = "text-danger" })
                                            }
                                            else
                                            {
                                                <div class="body-content container">
                                                    @Html.Raw(WebUtility.HtmlDecode(Model.WelcomeMessage))
                                                </div>
                                                 @*@Html.DisplayFor(model => model.WelcomeMessage, new { @class = "form-control", rows = "10", cols = "5" })*@
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div id="activities" class="tab-pane fade">
                                <div class="row">
                                    <div class="col-md-12 container"><a class="btn btn-primary btn-sm pull-right" id="addactivity">
                                        <img src="~/Assets/Icons/File-Plus.png" height="15" /></a>
                                    </div>                                  
                                        @Html.Action("_GetAllActivitiesForGuide", new { id = Model.ID })
                                </div>
                            </div>
                            <div id="extrainfo" class="tab-pane fade">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <br/><br/>
                                <div class="row hidden">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "col-md-4" })
                                            <div class="col-md-8" style="margin-left:-4em">
                                                @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                                @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row hidden">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.Label("Template", htmlAttributes: new { @class = "col-md-4" })
                                            <div class="col-md-8" style="margin-left:-1.2em">
                                                @Html.EditorFor(model=>model.TemplateID)
                                                @*@Html.DropDownList("TemplateID", new SelectList(ViewBag.Templates, "ID", "Title"), "", htmlAttributes: new { @class = "form-control input-sm" })*@
                                                @*@Html.DropDownList("TemplateID", null, htmlAttributes: new { @class = "form-control" })*@
                                                @Html.ValidationMessage("TemplateID", "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "col-md-4" })
                                            <div class="col-md-8" style="margin-left:-4em">
                                                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group hidden">
                                    @Html.LabelFor(model => model.JobSeekerID, "JobSeekerID", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.JobSeekerID, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                        @*@Html.DropDownList("JobSeekerID", null, htmlAttributes: new { @class = "form-control" })*@
                                        @Html.ValidationMessageFor(model => model.JobSeekerID, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="row hidden">
                                    <div class="col-md-6 col-lg-6">
                                        <div class="form-group">
                                            @Html.Label("Branch", htmlAttributes: new { @class = "col-md-4" })
                                            <div class="col-md-8">
                                                @Html.EditorFor(model => model.BranchID, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                                @Html.ValidationMessageFor(model => model.BranchID, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group hidden">
                                    @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                }
            </div>
        </div>
    </div>
</section>
@Scripts.Render("~/bundles/jqueryval")
@section Scripts{
    <script type="text/javascript">
        var mainurl = "@(Url.Action("_CreateGuideActivityViewModel","Onboarding"))";
        var deleteurl = "@(Url.Action("_DeleteActivity","Onboarding"))";
        var editurl = "@(Url.Action("_CreateActivityViewModel", "Onboarding"))";
        var templateid=@Model.TemplateID;
        var guideid=@Model.ID;
        $(function () {

            $("#updateguide").click(function(){
                $("#frm").submit();
            });

            $("#publishguide").click(function(){
                // alert($("#Status").val());
                $("#newStatus").val(1);
                //alert($("#newStatus").val());
                //alert("");
                //$("#Status").val()="Published";
                //alert($("#Status").val());
                $("#frm").submit();
            });
            $("#completeguide").click(function(){
                $("#newStatus").val(3);
                $("#frm").submit();
            });
            $("#closeguide").click(function(){
                $("#newStatus").val(4);
                $("#frm").submit();
            });
            var form = $("#frm");
            $("#sendemail").click(function () {
                var url = "@(Url.Action("_NotifyApplicant", "Onboarding",new {id=Model.ID }))";
                $.ajax({
                    type: "GET",
                    url: url,
                    data: {}, // serializes the form's elements. data: form.serialize(),
                    success: function (data) {
                        alert("Successful");
                    }
                });
            });
            $("a#editactivity").click(function () {
                var row = $(this).closest('tr');
                var id = row.find("td:eq(0)").html().trim();
                url=editurl + "?id="+id;
            });
            $("a#addactivity").click(function () {
                //var row = $(this).closest('tr');
                //var id = row.find("td:eq(0)").html().trim();
                //alert(id);
                url=mainurl + "?id="+5+"&templateid="+ templateid + "&guideid="+ guideid;
                $.get(url,{},function(data,status,jqXHR) {
                    //alert(data);
                    $('#selectedactivities').append('<br/>'+data);
                });

            });
            $("a#deleteactivity").click(function () {
                var row = $(this).closest('#activitypanel');
                var id = row.find("#item_ID").val().trim();
               // alert(id);
                url=deleteurl + "?id="+id;
                $.get(url,{},function(data,status,jqXHR) {
                    row.hide('slow').html("");
                });
            });
       });
    </script>
}
@*<script>
    $(function () {
        
        var editurl = "@(Url.Action("_CreateActivityViewModel", "Onboarding"))";
        $(function () {
            $("a#editactivity").click(function () {
                var row = $(this).closest('tr');
                var id = row.find("td:eq(0)").html().trim();
                //alert(id);
                url = editurl + "?id=" + id + "&templateid=" + templateid;
            });

        });
    });
</script>*@


