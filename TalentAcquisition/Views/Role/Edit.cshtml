@model TalentAcquisition.Core.Domain.OfficePosition
@{
    ViewBag.Title = "Edit Job";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<section class="mainbody">
    <div class="container">
        <div class="col-md-4">
            <div class="container">
                <ul class="nav">
                    @Html.Partial("_AdminDashboardSidebar")
                </ul>
            </div>
        </div>
        <div class="col-md-8">
            <div style="padding-top:2em;"></div>
            <p style="font-family: 'Fira Mono';font-size: 22px;">Edit Job</p>
            <ol class="breadcrumb">
                <li><a href="@Url.Action("Dashboard", "Admin")">Home</a></li>
                <li><a href="@Url.Action("Jobmanager", "Admin")">Job Manager</a></li>
                <li class="active">Job</li>
                <li class="active">@Model.Title</li>
            </ol>
            <section class="">
                <div class="row">
                    <a href="javascript:void()" id="submitjob" class="btn"><img src="~/Assets/Icons/File-Plus.png" width="20" />Save Changes</a>
                    <a href="javascript:void()" id="reqjob" class="btn"><img src="~/Assets/Icons/File-Plus.png" width="20" />Create Requisition</a>
                </div>
                <div class="row" style="font-size:80%">
                    <div class="row">
                        <span class="alert-success">@ViewBag.Message</span>
                    </div>
                    <form action="" method="post" id="editform">
                        <style>
                            select {
                                padding: 0;
                                margin: 0;
                                width: 100%;
                                min-width: 100%;
                                font-size: 80%;
                            }

                            .form-group {
                                padding-bottom: -1.0em;
                                margin-bottom: 0.4em;
                            }

                            textarea {
                                margin-top: -2em;
                                padding-top: -2em;
                            }

                            input {
                                margin: 0;
                                padding: 0;
                            }

                            label {
                                font-size: 90%;
                            }
                        </style>
                        @Html.AntiForgeryToken()
                        <div class="panel panel-primary">
                            <div class="panel-heading">
                                Job Details
                            </div>
                            <div class="panel-body" style="margin-bottom:-1.5em">
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="row">
                                        <div class="row"></div>
                                        <div class="row"></div>
                                        <div class="row"></div>
                                        <div class="row"></div>
                                        <div class="col-md-12 col-lg-6">
                                            @Html.HiddenFor(model => model.OfficePositionID)
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.JobID, htmlAttributes: new { @class = "col-md-3" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.JobID, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                                        @Html.ValidationMessageFor(model => model.JobID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "col-md-3" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.Posts, htmlAttributes: new { @class = "col-md-3" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.Posts, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                                        @Html.ValidationMessageFor(model => model.Reqirements, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.JobDescription, htmlAttributes: new { @class = "col-md-3" })
                                                    <div class="col-md-8" style="margin-top:2em">
                                                        @Html.TextAreaFor(model => model.JobDescription, new { @class = "form-control", rows = "4", cols = "5" })
                                                        @Html.ValidationMessageFor(model => model.JobDescription, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-12 col-lg-6">
                                            <div class="col-md-12" style="font-size:90%">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.MainObjective, htmlAttributes: new { @class = "col-md-3" })
                                                    <div class="col-md-8">
                                                        @Html.EditorFor(model => model.MainObjective, new { htmlAttributes = new { @class = "form-control" } })
                                                        @Html.ValidationMessageFor(model => model.MainObjective, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.IndustryID, "Industry", htmlAttributes: new { @class = " col-md-3" })
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("IndustryID", new SelectList(ViewBag.Industries, "IndustryId", "Name"), "", htmlAttributes: new { @class = "form-control input-sm" })
                                                        @Html.ValidationMessageFor(model => model.IndustryID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.DepartmentID, "Department", htmlAttributes: new { @class = " col-md-3" })
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("DepartmentID", new SelectList(ViewBag.Departments, "DepartmentID", "DepartmentName"), "", htmlAttributes: new { @class = "form-control input-sm" })
                                                        @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group" style="font-size:90%">
                                                    @Html.LabelFor(model => model.SupervisorID, htmlAttributes: new { @class = " col-md-3" })
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("SupervisorID", new SelectList(ViewBag.Positions, "OfficePositionID", "Title"), "", htmlAttributes: new { @class = "form-control input-sm" })
                                                        @Html.ValidationMessageFor(model => model.SupervisorID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-12">
                                                <div class="form-group">
                                                    @Html.LabelFor(model => model.BranchID, "Branch", htmlAttributes: new { @class = " col-md-3" })
                                                    <div class="col-md-8">
                                                        @Html.DropDownList("BranchID", new SelectList(ViewBag.Branches, "BranchId", "Location"), "", htmlAttributes: new { @class = "form-control input-sm" })
                                                        @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="panel panel-primary" style="margin-top:-1.7em;">
                            <div class="panel-heading">
                                Job Requirements
                            </div>
                            <div class="panel-body">
                                <a id="additem" href="javascript:void()" class="pull-right btn btn-default btn-xs" style="margin-top:-0.8em"><img src="~/Assets/Icons/File-Plus.png" width="20" /> Add</a>
                                @Html.Action("_GetRequirementsForEditing",new {requirements= (List<TalentAcquisition.BusinessLogic.UpdatedDomain.JobRequirement>)ViewBag.SelectedRequirements })
                            </div>
                        </div>
                        <div class="panel panel-primary" style="margin-top:-1.7em;">
                            <div class="panel-heading">
                                Applicant Evaluation Metrics
                            </div>
                            <div class="panel-body">
                                <a id="addappmetric" href="javascript:void()" class="pull-right btn btn-default btn-xs" style="margin-top:-0.8em"><img src="~/Assets/Icons/File-Plus.png" width="20" /> Add</a>
                                @Html.Action("_GetApplicantMetrics", new {jobid=Model.OfficePositionID })
                            </div>
                        </div>
                        <div class="panel panel-primary" style="margin-top:-1.7em;">
                            <div class="panel-heading">
                                Probation Evaluation Metrics
                            </div>
                            <div class="panel-body">
                                <a id="additem" href="javascript:void()" class="pull-right btn btn-default btn-xs" style="margin-top:-0.8em"><img src="~/Assets/Icons/File-Plus.png" width="20" /> Add</a>
                                @*@Html.Action("_GetRequirementsForEditing", new { requirements = (List<TalentAcquisition.BusinessLogic.UpdatedDomain.JobRequirement>)ViewBag.SelectedRequirements })*@
                            </div>
                        </div>
                        <div class="panel panel-primary" style="margin-top:-1.7em;">
                            <div class="panel-heading">
                                Job Evaluation Metrics
                            </div>
                            <div class="panel-body">
                                <a id="additem" href="javascript:void()" class="pull-right btn btn-default btn-xs" style="margin-top:-0.8em"><img src="~/Assets/Icons/File-Plus.png" width="20" /> Add</a>
                                @*@Html.Action("_GetRequirementsForEditing", new { requirements = (List<TalentAcquisition.BusinessLogic.UpdatedDomain.JobRequirement>)ViewBag.SelectedRequirements })*@
                            </div>
                        </div>
                    </form>
                </div>

            </section>
        </div>
    </div>
</section>
@section Scripts{
    <script type="text/javascript">
        var reqcount = @Model.JobRequirements.Count() +1;
        $(document).ready(function()
        {
            $("#submitjob").on("click", function () {
                $("#editform").submit();
            });
            $("#reqjob").on("click", function () {
                //$("#editform").attr('url').set();
                $("#editform").submit();
            });
            @*frm.submit(function (e) {

               e.preventDefault();

                $.ajax({
                    type: frm.attr('method'),
                    url: "@(Url.Action("Job/Create","Admin"))",
                    data: frm.serializeArray()
                });

            });*@

            $("a#additem").on("click", function () {
                var i=reqcount;
                var newdiv = "<tr id="+10+i+">";
                $.ajax({
                    type: "GET", url: "@(Url.Action("_CreateNewRequirement","Role"))",
                    data: {id:i},
                    success: function (data) {
                        $("tbody#requirementslist").append(data);
                        reqcount += 1;
                    },
                    error: function (error) {
                        alert("Error" + error.toString());
                    }
                    });
                });

        });
    </script>
}
