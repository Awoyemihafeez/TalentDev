@model TalentAcquisition.BusinessLogic.UpdatedDomain.LeaveApplication

@{
    ViewBag.Title = "Create Leave Application";
    Layout = "~/Views/Shared/_NormalLayout.cshtml";
}

<script>
    //$(function () {
    //    $.ajax({
    //        type: "GET",
    //        url: "/ManageEmployeeLeaves/GetLeavetypeLimit",
    //        datatype: "Json",
    //        success: function (data) {
    //            $.each(data, function (index, value) {
    //                $('#LeaveType').append('<option value="' + value.LeaveType + '">' + value.LeaveType + '</option>');
    //            });
    //        }
    //    });

    //    $('#LeaveType').change(function () {
    //        console.log($('#LeaveType').text());
    //       // alert($('#LeaveType :selected').text());
    //        $('#LeaveLimit').empty();

    //        $.ajax({
    //            type: "POST",
    //            url: "/ManageEmployeeLeaves/GetLeaveLimit",
    //            datatype: "application/json",
    //            data: { Limit: $('#LeaveType :selected').text() },
    //            success: function (data) {
    //            console.log(data);
    //                $.each(data, function (index, value) {
    //                    $('#LeaveLimit').append('<option value="' + value.Limit + '">' + value.Limit + '</option>');
    //                });
    //            }
    //        });
    //    });


    //});

    //$('#StartDate').change(function () {
    //    alert("startdate");
    //})
    //$('#EndDate').change(function () {
    //    alert("enddate");
    //})
</script>
<p>Leave Application</p>
<ol class="breadcrumb">
    <li><a href="@Url.Action("Dashboard","Admin")">Home</a></li>
    @*<li><a href="#">Private</a></li>*@
    @*<li><a href="#">Pictures</a></li>*@
    <li class="active">Leave Application</li>
</ol>
<section class="container body-content">
    @*<span>@ViewBag.Message</span>*@
    <div class="row">
        @*<a href="@Url.Action("requisition/create","Admin")" id="reqjob" class="btn"><img src="~/Assets/Icons/File-Plus.png" width="20" />Create Requisition</a>
            <span class="glyphicon glyphicon-search"></span> <input class="form-control input-sm" id="myInput" type="text" placeholder="filter requisition entries.." style="display:inline-block;outline:none" />*@
    </div>
    <div class="row">
        <span class="alert-danger">@ViewBag.Error</span>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <div class="panel-title">
                    <a data-toggle="collapse" href="#collapse5">Create Leave Application</a>
                </div>
            </div>
            <div id="collapse5" class="panel-collapse collapse in">
                <div class="panel-body">
                    <style>
                        label{
                            font-size:80%;
                        }
                    </style>
                    @using (Html.BeginForm())
                {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-horizontal">
                            <div class="col-md-12">
                                <div class="col-md-6">
                                    <div class="form-group hidden">
                                        @Html.LabelFor(model => model.LeavePlanID, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.LeavePlanID, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.LeavePlanID, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group hidden">
                                        @Html.LabelFor(model => model.EmployeeId, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.EmployeeId, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.EmployeeId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EmployeeName, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.EmployeeName, new { htmlAttributes = new { @class = "form-control",@readonly=true } })
                                            @Html.ValidationMessageFor(model => model.EmployeeName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LeaveType, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @if (Model.LeavePlanID == null || Model.LeavePlanID == 0)
                                            {
                                                @*@Html.DropDownList("LeaveType",new SelectList(ViewBag.LeaveTypes,"LeaveType", "LeaveType"))*@
                                                @Html.DropDownList("LeaveType", null, htmlAttributes: new { @class = "form-control", @required = true })
                                            }
                                            else
                                            {

                                                @Html.EditorFor(model => model.LeaveType, new { htmlAttributes = new { @class = "form-control",@readonly=true } })
                                                @Html.ValidationMessageFor(model => model.LeaveType, "", new { @class = "text-danger" })

                                            }
                                           </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LeaveLimit, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.LeaveLimit, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.LeaveLimit, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TotalLeaveTaken, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.TotalLeaveTaken, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.TotalLeaveTaken, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TotalLeaveAvailable, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.TotalLeaveAvailable, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.TotalLeaveAvailable, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Duration, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.Duration, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.Duration, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ApplyDate, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.ApplyDate, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.ApplyDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LeavePlanStatus, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EditorFor(model => model.LeavePlanStatus, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                                            @Html.ValidationMessageFor(model => model.LeavePlanStatus, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LeaveAppStatus, htmlAttributes: new { @class = "col-md-4" })
                                        <div class="col-md-8">
                                            @Html.EnumDropDownListFor(model => model.LeaveAppStatus, htmlAttributes: new { @class = "form-control",@readonly=true })
                                            @Html.ValidationMessageFor(model => model.LeaveAppStatus, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                }
                </div>
            </div>


        </div>
    </div>
</section>

@section Scripts{
    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript">
        $('#StartDate').datepicker({
            defaultDate: '',
            dateFormat: 'dd/mm/yy',
            showClose: true,
            showClear: true,
            toolbarPlacement: 'top'
        }).on('dp.change', function (e) {
            alert(e);
            console.log("datr");
        });
    </script>
    <script type="text/javascript">
        $('#EndDate').datepicker({
            defaultDate: '',
            dateFormat: 'dd/mm/yy',
            showClose: true,
            showClear: true,
            toolbarPlacement: 'top'
        });

        //var calcdays = function () {
        //    var date1in = $("#StartDate").val();
        //    var date2in = $("#EndDate").val();

        //    if ((date1in == "") || (date2in == "")) {

        //      //  alert(date1in);
        //     //   alert(date2in);

        //        return false;
        //    }
        //    var date1 = new Date(date1in);
        //    var date2 = new Date(date2in);
        //  //  alert(date1);
        //  //  alert(date2);
        //    var timeDiff = Math.abs(date2.getTime() - date1.getTime());
        //    var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));

        //    if (diffDays > 0)
        //    {
        //       alert(diffDays);
        //    }

        //    return false;
        //}
        //    $("#StartDate").keyup(function () {
        //        calcdays();
        //    });
        //    $("#EndDate").keyup(function () {
        //        calcdays();
        //    });

        $( "#StartDate" ).datepicker({ dateFormat: 'dd-mm-yy' });
        $( "#EndDate" ).datepicker({ dateFormat: 'dd-mm-yy' });

        $('#EndDate').change(function() {
            var start = $('#StartDate').datepicker('getDate');
            var end   = $('#EndDate').datepicker('getDate');

            if (start<end) {
                var days   = (end - start)/1000/60/60/24;
                $('#Duration').val(days);
            }
            else {
                alert ("Please select right Date format for the two dates!");
                $('#StartDate').val("");
                $('#EndDate').val("");
                $('#Duration').val("");
            }
        }); //end change function

    </script>
}